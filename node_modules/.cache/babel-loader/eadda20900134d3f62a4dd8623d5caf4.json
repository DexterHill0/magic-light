{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n//bond/unbond\n//discover\nimport React from 'react';\nimport ReactDOMServer from \"react-dom/server\";\nimport { IonIcon, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, closeOutline, syncOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css';\n\n// const BluetoothDeviceItem = (Props) => {\n// \tconst [connectingState, setConnectingState] = useState(Props.state());\n// \tuseEffect(() => {\n// \t\tstateChangeCallback();\n// \t}, [connectingState]);\n// \tconst ref = React.useRef(null)\n// \tconst { onClick } = Props;\n// \tconst stateChangeCallback = () => {\n// \t\tconst elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function (data) { return data.id === Props.mac })\n// \t\tconst connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n// \t\tconst spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n// \t\tswitch (connectingState) {\n// \t\t\tcase 'not_connected':\n// \t\t\t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n// \t\t\t\tconnectingIcon[\"icon\"] = closeOutline;\n// \t\t\t\tbreak;\n// \t\t\tcase 'connecting':\n// \t\t\t\tspinnerIcon.opacity = 1;\n// \t\t\t\tconnectingIcon[\"style\"][\"opacity\"] = 0;\n// \t\t\t\tbreak;\n// \t\t\tcase 'connected':\n// \t\t\t\tspinnerIcon.opactiy = 0;\n// \t\t\t\tconnectingIcon[\"style\"][\"opacity\"] = 1;\n// \t\t\t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n// \t\t\t\tconnectingIcon[\"icon\"] = checkmarkOutline;\n// \t\t}\n// \t}\n// \tconst rerender = () => {\n// \t\tsetConnectingState(Props.state());\n// \t}\n// \tconst wait = async () => {\n// \t\tonClick(Props.mac);\n// \t\trerender();\n// \t}\n// \treturn (\n// \t\t<IonItem lines=\"none\" class=\"item-container\" id={Props.mac} onClick={wait} ref={ref} {...rerender}>\n// \t\t\t<IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n// \t\t\t\t<IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n// \t\t\t</IonAvatar>\n// \t\t\t<IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n// \t\t\t\t<IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n// \t\t\t\t<IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n// \t\t\t</IonAvatar>\n// \t\t\t<IonLabel>\n// \t\t\t\t<div className=\"device-name\">{Props.name}</div>\n// \t\t\t\t<div className=\"device-mac\">{Props.mac}</div>\n// \t\t\t</IonLabel>\n// \t\t</IonItem>\n// \t);\n// }\nclass BluetoothDeviceItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateIcons = () => {\n      const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(data => {\n        return data.id === this.props.mac;\n      });\n      const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex]; //const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n      switch (this.props.state()) {\n        case 'not_connected':\n          //spinnerIcon.opactiy = 0;\n          //connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n          //connectingIcon[\"icon\"] = closeOutline;\n          connectingIcon.innerHTML = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(IonIcon, {\n            icon: closeOutline,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 62\n            }\n          }));\n          console.log(connectingIcon.innerHTML);\n          break;\n\n        case 'connecting':\n          //spinnerIcon.opacity = 1;\n          //connectingIcon[\"style\"][\"opacity\"] = 0;\n          connectingIcon.innerHTML = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(IonIcon, {\n            icon: syncOutline,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 62\n            }\n          }));\n          console.log(connectingIcon.innerHTML);\n          break;\n\n        case 'connected':\n          //spinnerIcon.opactiy = 0;\n          //connectingIcon[\"style\"][\"opacity\"] = 1;\n          //connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n          //connectingIcon[\"icon\"] = checkmarkOutline;\n          connectingIcon.innerHTML = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(IonIcon, {\n            icon: closeOutline,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 62\n            }\n          }));\n          break;\n      }\n    };\n\n    this.rerender = () => {\n      this.forceUpdate();\n    };\n\n    this.wait = async () => {\n      this.props.onClick(this.props.mac);\n      this.updateIcons();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonItem, {\n      lines: \"none\",\n      class: \"item-container\",\n      id: this.props.mac,\n      onClick: this.wait,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(IonAvatar, {\n      slot: \"start\",\n      class: \"bluetooth-icon-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: bluetoothOutline,\n      class: \"bluetooth-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(IonAvatar, {\n      slot: \"end\",\n      class: \"connecting-icons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connecting-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: closeOutline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"device-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"device-mac\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, this.props.mac)));\n  }\n\n}\n\nexport default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","ReactDOMServer","IonIcon","IonItem","IonAvatar","IonLabel","bluetoothOutline","closeOutline","syncOutline","BluetoothDeviceItem","Component","constructor","props","updateIcons","elementIndex","Array","prototype","slice","call","document","getElementsByClassName","children","findIndex","data","id","mac","connectingIcon","state","innerHTML","renderToString","console","log","rerender","forceUpdate","wait","onClick","render","name"],"mappings":";AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAiE,cAAjE;AACA,SAASC,gBAAT,EAA6CC,YAA7C,EAA2DC,WAA3D,QAAuF,gBAAvF;AAEA,OAAO,2BAAP;;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAN,SAAkCT,KAAK,CAACU,SAAxC,CAA6D;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAIXC,WAJW,GAIG,MAAM;AAC3B,YAAMC,YAAY,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,EAAkDC,QAA7E,EAAuFC,SAAvF,CAAkGC,IAAD,IAAU;AAAC,eAAOA,IAAI,CAACC,EAAL,KAAY,KAAKZ,KAAL,CAAWa,GAA9B;AAAkC,OAA9I,CAArB;AAEA,YAAMC,cAAc,GAAGP,QAAQ,CAACC,sBAAT,CAAgC,kBAAhC,EAAoDN,YAApD,CAAvB,CAH2B,CAI3B;;AAEA,cAAQ,KAAKF,KAAL,CAAWe,KAAX,EAAR;AACC,aAAK,eAAL;AACC;AACA;AACA;AACAD,UAAAA,cAAc,CAACE,SAAf,GAA2B3B,cAAc,CAAC4B,cAAf,eAA8B,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEtB,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9B,CAA3B;AACAuB,UAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACE,SAA3B;AACA;;AACD,aAAK,YAAL;AACC;AACA;AACAF,UAAAA,cAAc,CAACE,SAAf,GAA2B3B,cAAc,CAAC4B,cAAf,eAA8B,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAErB,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9B,CAA3B;AACAsB,UAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACE,SAA3B;AACA;;AACD,aAAK,WAAL;AACC;AACA;AACA;AACA;AACAF,UAAAA,cAAc,CAACE,SAAf,GAA2B3B,cAAc,CAAC4B,cAAf,eAA8B,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEtB,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9B,CAA3B;AACA;AApBF;AAsBA,KAhCkB;;AAAA,SAkCZyB,QAlCY,GAkCD,MAAM;AACvB,WAAKC,WAAL;AACA,KApCkB;;AAAA,SAsCXC,IAtCW,GAsCJ,YAAY;AAC1B,WAAKtB,KAAL,CAAWuB,OAAX,CAAmB,KAAKvB,KAAL,CAAWa,GAA9B;AACA,WAAKZ,WAAL;AACA,KAzCkB;AAElB;;AAyCDuB,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAC,gBAA5B;AAA6C,MAAA,EAAE,EAAE,KAAKxB,KAAL,CAAWa,GAA5D;AAAiE,MAAA,OAAO,EAAE,KAAKS,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAC,0BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE5B,gBAAf;AAAiC,MAAA,KAAK,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,eAIC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAJD,eAWC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKK,KAAL,CAAWyB,IAAzC,CADD,eAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKzB,KAAL,CAAWa,GAAxC,CAFD,CAXD,CADD;AAkBA;;AAhE2D;;AAmE7D,eAAehB,mBAAf","sourcesContent":["\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n\n//bond/unbond\n//discover\n\n\nimport React from 'react';\nimport ReactDOMServer from \"react-dom/server\";\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel} from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline, syncOutline, close,  } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n\n\ninterface Props {\n\tname: string;\n\tmac: string;\n\tstate: () => string;\n\tonClick: (id) => void;\n}\n\n// const BluetoothDeviceItem = (Props) => {\n// \tconst [connectingState, setConnectingState] = useState(Props.state());\n// \tuseEffect(() => {\n// \t\tstateChangeCallback();\n// \t}, [connectingState]);\n\n// \tconst ref = React.useRef(null)\n// \tconst { onClick } = Props;\n\n// \tconst stateChangeCallback = () => {\n// \t\tconst elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function (data) { return data.id === Props.mac })\n// \t\tconst connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n// \t\tconst spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n// \t\tswitch (connectingState) {\n// \t\t\tcase 'not_connected':\n// \t\t\t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n// \t\t\t\tconnectingIcon[\"icon\"] = closeOutline;\n// \t\t\t\tbreak;\n// \t\t\tcase 'connecting':\n// \t\t\t\tspinnerIcon.opacity = 1;\n// \t\t\t\tconnectingIcon[\"style\"][\"opacity\"] = 0;\n// \t\t\t\tbreak;\n// \t\t\tcase 'connected':\n// \t\t\t\tspinnerIcon.opactiy = 0;\n// \t\t\t\tconnectingIcon[\"style\"][\"opacity\"] = 1;\n// \t\t\t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n// \t\t\t\tconnectingIcon[\"icon\"] = checkmarkOutline;\n// \t\t}\n// \t}\n\n// \tconst rerender = () => {\n// \t\tsetConnectingState(Props.state());\n// \t}\n\n// \tconst wait = async () => {\n// \t\tonClick(Props.mac);\n// \t\trerender();\n\n// \t}\n\n// \treturn (\n// \t\t<IonItem lines=\"none\" class=\"item-container\" id={Props.mac} onClick={wait} ref={ref} {...rerender}>\n// \t\t\t<IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n// \t\t\t\t<IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n// \t\t\t</IonAvatar>\n// \t\t\t<IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n// \t\t\t\t<IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n// \t\t\t\t<IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n// \t\t\t</IonAvatar>\n// \t\t\t<IonLabel>\n// \t\t\t\t<div className=\"device-name\">{Props.name}</div>\n// \t\t\t\t<div className=\"device-mac\">{Props.mac}</div>\n// \t\t\t</IonLabel>\n// \t\t</IonItem>\n// \t);\n// }\nclass BluetoothDeviceItem extends React.Component<Props, {}> {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tprivate updateIcons = () => {\n\t\tconst elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex((data) => {return data.id === this.props.mac});\n\n\t\tconst connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n\t\t//const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n\t\tswitch (this.props.state()) {\n\t\t\tcase 'not_connected':\n\t\t\t\t//spinnerIcon.opactiy = 0;\n\t\t\t\t//connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n\t\t\t\t//connectingIcon[\"icon\"] = closeOutline;\n\t\t\t\tconnectingIcon.innerHTML = ReactDOMServer.renderToString(<IonIcon icon={closeOutline}></IonIcon>);\n\t\t\t\tconsole.log(connectingIcon.innerHTML)\n\t\t\t\tbreak;\n\t\t\tcase 'connecting':\n\t\t\t\t//spinnerIcon.opacity = 1;\n\t\t\t\t//connectingIcon[\"style\"][\"opacity\"] = 0;\n\t\t\t\tconnectingIcon.innerHTML = ReactDOMServer.renderToString(<IonIcon icon={syncOutline}></IonIcon>);\n\t\t\t\tconsole.log(connectingIcon.innerHTML)\n\t\t\t\tbreak;\n\t\t\tcase 'connected':\n\t\t\t\t//spinnerIcon.opactiy = 0;\n\t\t\t\t//connectingIcon[\"style\"][\"opacity\"] = 1;\n\t\t\t\t//connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n\t\t\t\t//connectingIcon[\"icon\"] = checkmarkOutline;\n\t\t\t\tconnectingIcon.innerHTML = ReactDOMServer.renderToString(<IonIcon icon={closeOutline}></IonIcon>);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic rerender = () => {\n\t\tthis.forceUpdate();\n\t}\n\n\tprivate wait = async () => {\n\t\tthis.props.onClick(this.props.mac);\n\t\tthis.updateIcons();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IonItem lines=\"none\" class=\"item-container\" id={this.props.mac} onClick={this.wait} >\n\t\t\t\t<IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n\t\t\t\t\t<IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n\t\t\t\t</IonAvatar>\n\t\t\t\t<IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n\t\t\t\t\t<div className=\"connecting-icons\">\n\t\t\t\t\t\t<IonIcon icon={closeOutline}></IonIcon>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon> */}\n\t\t\t\t\t{/* <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner> */}\n\t\t\t\t</IonAvatar>\n\t\t\t\t<IonLabel>\n\t\t\t\t\t<div className=\"device-name\">{this.props.name}</div>\n\t\t\t\t\t<div className=\"device-mac\">{this.props.mac}</div>\n\t\t\t\t</IonLabel>\n\t\t\t</IonItem>\n\t\t);\n\t}\n}\n\nexport default BluetoothDeviceItem;\n"]},"metadata":{},"sourceType":"module"}