{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css';\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [connectingState, setConnectingState] = useState('not_connected');\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n  const {\n    onClick\n  } = Props;\n\n  const stateChangeCallback = () => {\n    const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function (data) {\n      console.log(data.key);\n    });\n    const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n    const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n    switch (connectingState) {\n      case 'not_connected':\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n\n      case 'connecting':\n        spinnerIcon.opacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n\n      case 'connected':\n        spinnerIcon.opactiy = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  };\n\n  const wait = async () => {\n    setConnectingState('connecting');\n    let ret = await onClick(Props.mac);\n  };\n\n  return /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    class: \"item-container\",\n    onClick: wait,\n    id: connectingState,\n    key: Props.mac,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"start\",\n    class: \"bluetooth-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: bluetoothOutline,\n    class: \"bluetooth-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"end\",\n    class: \"connecting-icons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    class: \"connecting-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonSpinner, {\n    name: \"dots\",\n    class: \"connecting-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Props.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-mac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, Props.mac)));\n};\nexport default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","useState","useEffect","IonIcon","IonSpinner","IonItem","IonAvatar","IonLabel","bluetoothOutline","checkmarkOutline","closeOutline","BluetoothDeviceItem","Props","connectingState","setConnectingState","stateChangeCallback","onClick","elementIndex","Array","prototype","slice","call","document","getElementsByClassName","children","findIndex","data","console","log","key","connectingIcon","spinnerIcon","opacity","opactiy","wait","ret","mac","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n\ninterface Props {\n  name: string;\n  mac: string;\n}\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [ connectingState, setConnectingState ] = useState('not_connected');\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  const { onClick } = Props;\n\n  const stateChangeCallback = () => {\n    const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function(data){ console.log(data.key); })\n\n    const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n    const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n    switch(connectingState) {\n      case 'not_connected':\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n      case 'connecting':\n        spinnerIcon.opacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n      case 'connected':\n        spinnerIcon.opactiy = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  }\n\n  const wait = async () => {\n    setConnectingState('connecting');\n\n    let ret = await onClick(Props.mac);\n  }\n\n  return (\n    <IonItem lines=\"none\" class=\"item-container\" onClick={wait} id={connectingState} key={Props.mac}>\n      <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n        <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n      </IonAvatar>\n      <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n        <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n        <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n      </IonAvatar>\n      <IonLabel>\n        <div className=\"device-name\">{Props.name}</div>\n        <div className=\"device-mac\">{Props.mac}</div>\n      </IonLabel>\n    </IonItem>\n  );\n\n}\nexport default BluetoothDeviceItem;\n"]},"metadata":{},"sourceType":"module"}