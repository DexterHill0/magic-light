{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css'; //import { BluetoothDevice } from '../../interfaces/BluetoothDevice'\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const {\n    onClick\n  } = Props;\n  const [connectingState, setConnectingState] = useState('not_connected');\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  const connenct = async () => {\n    setConnectingState('connecting');\n\n    try {\n      await tryConnect();\n      setConnectingState('connected');\n    } catch (error) {\n      setConnectingState('not_connected');\n    }\n\n    return connectingState;\n  };\n\n  const stateChangeCallback = () => {\n    let connectingIcon = document.getElementsByClassName(\"connecting-icons\")[0];\n    let spinnerOpacity = document.getElementsByClassName(\"connecting-spinner\")[0][\"style\"].opacity;\n\n    switch (connectingState) {\n      case 'not_connected':\n        setIsConnected(false);\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n\n      case 'connecting':\n        setIsConnected(false);\n        spinnerOpacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n\n      case 'connected':\n        setIsConnected(true);\n        spinnerOpacity = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  };\n\n  const tryConnect = () => {\n    return new Promise(function (resolve, reject) {\n      console.log(\"connecting...\");\n      setTimeout(function () {\n        resolve(1);\n      }, 1000);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    class: \"item-container\",\n    onClick: onClick,\n    id: Props.mac,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"start\",\n    class: \"bluetooth-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: bluetoothOutline,\n    class: \"bluetooth-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"end\",\n    class: \"connecting-icons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    class: \"connecting-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonSpinner, {\n    name: \"dots\",\n    class: \"connecting-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, Props.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-mac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, Props.mac)));\n};\nexport default BluetoothDeviceItem; // class BluetoothDeviceItem extends React.Component<Props, {}> {\n//   render() {\n//     return (\n//       <IonItem lines=\"none\" class=\"item-container\" onClick={this.connenct}>\n//         <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n//           <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n//         </IonAvatar>\n//         <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n//           <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n//           <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n//         </IonAvatar>\n//         <IonLabel>\n//           <div className=\"device-name\">{this.props.name}</div>\n//           <div className=\"device-mac\">{this.props.mac}</div>\n//         </IonLabel>\n//       </IonItem>\n//     );\n//   }\n//   private connenct = async () => {\n//     const ic = document.getElementsByClassName(\"connecting-icons\")[0];\n//     const sp = document.getElementsByClassName(\"connecting-spinner\")[0];\n//     sp[\"style\"][\"opacity\"] = 1;\n//     ic[\"style\"][\"opacity\"] = 0;\n//     try { await this.tryConnect(); } \n//     catch(error) { this.switchIcon(false, sp, ic); }\n//     this.switchIcon(true, sp, ic);\n//   }\n//   private tryConnect() {\n//     return new Promise(function(resolve, reject) {\n//       console.log(\"connecting...\");\n//       setTimeout(function(){ resolve(1); }, 1000);\n//     });\n//   }\n//   private switchIcon(connected, sp, ic) {\n//     sp[\"style\"][\"opacity\"] = 0;\n//     ic[\"style\"][\"opacity\"] = 1;\n//     ic[\"style\"][\"color\"] = connected ? \"var(--ion-color-success)\" : \"var(--ion-color-danger)\";\n//     ic[\"icon\"] = connected ? checkmarkOutline : closeOutline;\n//   }\n// }\n// export default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","useState","useEffect","IonIcon","IonSpinner","IonItem","IonAvatar","IonLabel","bluetoothOutline","checkmarkOutline","closeOutline","BluetoothDeviceItem","Props","onClick","connectingState","setConnectingState","isConnected","setIsConnected","stateChangeCallback","connenct","tryConnect","error","connectingIcon","document","getElementsByClassName","spinnerOpacity","opacity","Promise","resolve","reject","console","log","setTimeout","mac","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline, analytics } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n//import { BluetoothDevice } from '../../interfaces/BluetoothDevice'\n\ninterface Props {\n  name: string;\n  mac: string;\n  isConnected: boolean;\n}\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const { onClick } = Props;\n\n  const [ connectingState, setConnectingState ] = useState('not_connected');\n  const [ isConnected, setIsConnected ] = useState(false);\n\n\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  const connenct = async () => {\n    setConnectingState('connecting');\n\n    try { \n      await tryConnect(); \n      setConnectingState('connected');\n    } \n    catch(error) { setConnectingState('not_connected') }\n\n    return connectingState\n  }\n\n  const stateChangeCallback = () => {\n    let connectingIcon = document.getElementsByClassName(\"connecting-icons\")[0];\n    let spinnerOpacity = document.getElementsByClassName(\"connecting-spinner\")[0][\"style\"].opacity;\n\n    switch(connectingState) {\n      case 'not_connected':\n        setIsConnected(false);\n\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n      case 'connecting':\n        setIsConnected(false);\n        \n        spinnerOpacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n      case 'connected':\n        setIsConnected(true);\n\n        spinnerOpacity = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  }\n\n  const tryConnect = () => {\n    return new Promise(function(resolve, reject) {\n      console.log(\"connecting...\");\n      setTimeout(function(){ resolve(1); }, 1000);\n    });\n  }\n\n    return (\n      <IonItem lines=\"none\" class=\"item-container\" onClick={onClick} id={Props.mac}>\n        <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n          <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n        </IonAvatar>\n        <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n          <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n          <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n        </IonAvatar>\n        <IonLabel>\n          <div className=\"device-name\">{Props.name}</div>\n          <div className=\"device-mac\">{Props.mac}</div>\n        </IonLabel>\n      </IonItem>\n    );\n\n}\n\nexport default BluetoothDeviceItem;\n\n\n// class BluetoothDeviceItem extends React.Component<Props, {}> {\n\n//   render() {\n//     return (\n//       <IonItem lines=\"none\" class=\"item-container\" onClick={this.connenct}>\n//         <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n//           <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n//         </IonAvatar>\n//         <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n//           <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n//           <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n//         </IonAvatar>\n//         <IonLabel>\n//           <div className=\"device-name\">{this.props.name}</div>\n//           <div className=\"device-mac\">{this.props.mac}</div>\n//         </IonLabel>\n//       </IonItem>\n//     );\n//   }\n\n//   private connenct = async () => {\n//     const ic = document.getElementsByClassName(\"connecting-icons\")[0];\n//     const sp = document.getElementsByClassName(\"connecting-spinner\")[0];\n    \n//     sp[\"style\"][\"opacity\"] = 1;\n//     ic[\"style\"][\"opacity\"] = 0;\n\n//     try { await this.tryConnect(); } \n//     catch(error) { this.switchIcon(false, sp, ic); }\n\n//     this.switchIcon(true, sp, ic);\n    \n//   }\n\n//   private tryConnect() {\n//     return new Promise(function(resolve, reject) {\n//       console.log(\"connecting...\");\n//       setTimeout(function(){ resolve(1); }, 1000);\n//     });\n//   }\n\n//   private switchIcon(connected, sp, ic) {\n//     sp[\"style\"][\"opacity\"] = 0;\n//     ic[\"style\"][\"opacity\"] = 1;\n//     ic[\"style\"][\"color\"] = connected ? \"var(--ion-color-success)\" : \"var(--ion-color-danger)\";\n//     ic[\"icon\"] = connected ? checkmarkOutline : closeOutline;\n//   }\n// }\n\n// export default BluetoothDeviceItem;"]},"metadata":{},"sourceType":"module"}