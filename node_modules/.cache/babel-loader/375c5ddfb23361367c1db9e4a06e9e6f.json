{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceList.tsx\";\nimport { IonList } from \"@ionic/react\";\nimport React from \"react\";\nimport { Bluetooth } from '../../globals/globals';\n\nclass BluetoothDeviceList extends React.Component {\n  constructor(Props) {\n    super(Props);\n  }\n\n  componentDidUpdate(prevProps) {\n    //if a new set of devices is passed as props\n    console.log(\"h\");\n\n    if (prevProps.devices !== this.props.devices) {\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonList, {\n      class: \"device-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, Bluetooth.devices.map(el => el));\n  }\n\n}\n\nexport default BluetoothDeviceList;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceList.tsx"],"names":["IonList","React","Bluetooth","BluetoothDeviceList","Component","constructor","Props","componentDidUpdate","prevProps","console","log","devices","props","forceUpdate","render","map","el"],"mappings":";AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;;AAMA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAA6D;AAEzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAE;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,QAAGF,SAAS,CAACG,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAApC,EAA6C;AACzC,WAAKE,WAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQZ,SAAS,CAACS,OAAV,CAAkBI,GAAlB,CAAsBC,EAAE,IAAIA,EAA5B,CAFR,CADJ;AAOH;;AArBwD;;AAuB7D,eAAeb,mBAAf","sourcesContent":["import { IonList } from \"@ionic/react\";\nimport React from \"react\";\n\nimport { Bluetooth } from '../../globals/globals'\n\ninterface Props {\n    devices: any[]\n}\n\nclass BluetoothDeviceList extends React.Component<Props, {}> {\n\n    constructor(Props) {\n        super(Props);\n    }\n\n    componentDidUpdate(prevProps) { //if a new set of devices is passed as props\n        console.log(\"h\");\n        if(prevProps.devices !== this.props.devices) {\n            this.forceUpdate();\n        }\n    }\n\n    render() {\n        return (\n            <IonList class=\"device-list\">\n                {\n                    Bluetooth.devices.map(el => el)\n                }\n            </IonList>\n        );\n    }\n}\nexport default BluetoothDeviceList;"]},"metadata":{},"sourceType":"module"}