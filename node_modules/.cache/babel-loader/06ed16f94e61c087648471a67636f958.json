{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css'; //import { BluetoothDevice } from '../../interfaces/BluetoothDevice'\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [connectingState, setConnectingState] = useState('not_connected');\n  const [isConnected, setIsConnected] = useState(false);\n  const {\n    onClick\n  } = Props;\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  const stateChangeCallback = () => {\n    const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[0];\n    let spinnerOpacity = document.getElementsByClassName(\"connecting-spinner\")[0][\"style\"].opacity;\n\n    switch (connectingState) {\n      case 'not_connected':\n        setIsConnected(false);\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n\n      case 'connecting':\n        setIsConnected(false);\n        spinnerOpacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n\n      case 'connected':\n        setIsConnected(true);\n        spinnerOpacity = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    class: \"item-container\",\n    onClick: () => {\n      onClick(Props.mac);\n      setConnectingState('connecting');\n    },\n    id: Props.mac,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"start\",\n    class: \"bluetooth-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: bluetoothOutline,\n    class: \"bluetooth-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"end\",\n    class: \"connecting-icons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    class: \"connecting-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonSpinner, {\n    name: \"dots\",\n    class: \"connecting-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, Props.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-mac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, Props.mac)));\n};\nexport default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","useState","useEffect","IonIcon","IonSpinner","IonItem","IonAvatar","IonLabel","bluetoothOutline","checkmarkOutline","closeOutline","BluetoothDeviceItem","Props","connectingState","setConnectingState","isConnected","setIsConnected","onClick","stateChangeCallback","connectingIcon","document","getElementsByClassName","spinnerOpacity","opacity","mac","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline, analytics } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n//import { BluetoothDevice } from '../../interfaces/BluetoothDevice'\n\ninterface Props {\n  name: string;\n  mac: string;\n  isConnected: boolean;\n}\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [ connectingState, setConnectingState ] = useState('not_connected');\n  const [ isConnected, setIsConnected ] = useState(false);\n\n  const { onClick } = Props;\n\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  const stateChangeCallback = () => {\n    const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[0];\n    let spinnerOpacity = document.getElementsByClassName(\"connecting-spinner\")[0][\"style\"].opacity;\n\n    switch(connectingState) {\n      case 'not_connected':\n        setIsConnected(false);\n\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n        connectingIcon[\"icon\"] = closeOutline;\n        break;\n      case 'connecting':\n        setIsConnected(false);\n\n        spinnerOpacity = 1;\n        connectingIcon[\"style\"][\"opacity\"] = 0;\n        break;\n      case 'connected':\n        setIsConnected(true);\n\n        spinnerOpacity = 0;\n        connectingIcon[\"style\"][\"opacity\"] = 1;\n        connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n        connectingIcon[\"icon\"] = checkmarkOutline;\n    }\n  }\n\n  return (\n    <IonItem lines=\"none\" class=\"item-container\" onClick={() => {onClick(Props.mac); setConnectingState('connecting')}} id={Props.mac}>\n      <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n        <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n      </IonAvatar>\n      <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n        <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n        <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n      </IonAvatar>\n      <IonLabel>\n        <div className=\"device-name\">{Props.name}</div>\n        <div className=\"device-mac\">{Props.mac}</div>\n      </IonLabel>\n    </IonItem>\n  );\n\n}\nexport default BluetoothDeviceItem;\n"]},"metadata":{},"sourceType":"module"}