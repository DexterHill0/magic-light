{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx\";\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonIcon, IonAlert, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonSpinner, IonFooter, isPlatform } from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline } from 'ionicons/icons';\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { OpenNativeSettings } from '@ionic-native/open-native-settings';\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\nimport { bluetoothDevices } from '../../../globals/globals';\nimport './index.css';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.bluetooth = new Bluetooth({\n      ble: BluetoothLE,\n      bls: BluetoothSerial\n    });\n    this.state = {\n      isBluetoothNotEnabled: false,\n      isErrorConnecting: false,\n      isContinueNoDevice: false\n    };\n  }\n\n  componentDidMount() {\n    this.bluetooth.bluetoothInitialize(); //this.scanClass.scan(10);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, {\n      class: \"main-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"main-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      class: \"main-toolbar-title\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Select A Device\"), /*#__PURE__*/React.createElement(IonIcon, {\n      icon: chevronForward,\n      class: \"next-button\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(IonSpinner, {\n      class: \"single-refresh-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonContent, {\n      class: \"mid-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonList, {\n      class: \"device-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, bluetoothDevices.map(el => el))), /*#__PURE__*/React.createElement(IonFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"footer-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterOutlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IonTabBar, {\n      slot: \"bottom\",\n      class: \"tab-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Wifi\",\n      href: \"/scan-devices/wifi\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: wifiOutline,\n      class: \"button-wifi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-wifi button-wifi-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Wifi\")), /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Bluetooth\",\n      href: \"/scan-devices/bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: bluetoothOutline,\n      class: \"button-bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-bluetooth button-bluetooth-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"Bluetooth\")))))), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.isContinueNoDevice,\n      header: 'Continue?',\n      message: 'Are you sure you want to continue without selecting a device?',\n      buttons: [{\n        text: 'Cancel'\n      }, {\n        text: 'Okay',\n        handler: () => {\n          console.log('continue ok'); //move to next screen\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.isBluetoothNotEnabled,\n      header: 'Error',\n      message: 'Bluetooth is not enabled. Please enable Bluetooth and try again.',\n      buttons: [{\n        text: 'Settings',\n        handler: () => {\n          document.addEventListener(\"resume\", () => {\n            this.bluetooth.bluetoothInitialize();\n            this.bluetooth.scan(10);\n          }, false);\n          console.log('opening settings');\n          OpenNativeSettings.open(\"bluetooth\");\n        }\n      }, {\n        text: 'Okay',\n        handler: () => {\n          this.bluetooth.bluetoothInitialize();\n          this.bluetooth.scan(10);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.isErrorConnecting,\n      header: 'Error',\n      message: 'There was an error connecting to the Bluetooth device. Make sure the device is turned on and try again.',\n      buttons: ['OK'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default Main;\n\nclass Bluetooth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = state => {\n      console.log(state); //this.setState({ connectingState: state });\n\n      this.connect(\"s\");\n    };\n\n    this.scan = async timeout => {\n      if (this.state.isCordova) {\n        //this.props.ble.stopScan(); //stop any current scans\n        console.log(\"scanning!\"); // this.props.ble.startScan( {\"allowDuplicates\": false, \"isConnectable\": true}  ).subscribe((result) => {\n        //   if(result.status === \"scanResult\") {\n        //     this.devices.push(result);\n        //   }\n        //   else if(result.status !== \"scanStarted\") {\n        //     this.checkEnabled();\n        //   }\n        // });\n\n        this.props.bls.discoverUnpaired().then(function (result) {\n          console.log(result);\n        });\n        await this.timeout(timeout); //this.props.ble.stopScan();\n\n        console.log(\"stopped scan!\");\n      }\n    };\n\n    this.connect = id => {\n      bluetoothDevices.forEach(element => {\n        //disconnecting any other currently connected devices and updating them in the list (setting them back to not connected)\n        let state = element; //console.log(state);\n\n        if ((element.props.connectingState === 'connecting' || element.props.connectingState === 'connected') && element.props.mac !== id) {\n          const currDev = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")); //let updated = <BluetoothDeviceItem key={element.props.mac} mac={element.props.mac} name={\"hf\"} onClick={this.connect}></BluetoothDeviceItem>\n          //currDev[Array.prototype.slice.call(currDev[0].children).findIndex(function(data){ return data.id === id })] = updated;\n        }\n\n        if (element.props.connectingState === 'connecting') {//stop the connection / disconnect\n        } else if (element.props.connectingState === 'connected') {//disconnect device\n        }\n      });\n    };\n\n    this.state = {\n      connectingState: 'not_connected',\n      isCordova: false\n    };\n  }\n\n  bluetoothInitialize() {\n    for (let i = 0; i < 5; i++) {\n      let a = /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n        key: i,\n        mac: i.toString(),\n        name: \"device_\" + i,\n        connectingState: this.state.connectingState,\n        onClick: state => this.handleClick(state),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      });\n      bluetoothDevices.push(a);\n    }\n\n    if (!isPlatform('cordova')) {\n      console.log(\"platform not cordova, BLE will not work!\");\n      this.setState({\n        isCordova: true\n      });\n      return;\n    }\n\n    this.checkEnabled(); // await this.props.ble.initialize( {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"} ).subscribe((result) => {\n    //   if(result.status === \"disabled\") {\n    //     this.checkEnabled();\n    //   }\n    // });\n  }\n\n  checkEnabled() {//this.props.ble.isEnabled().then(isEnabled); //is bluetooth le enabled\n    //this.props.ble.isEnabled().then(resp => !resp.isEnabled ? this.setState({isBluetoothEnabled: false}) : this.setState({isBluetoothEnabled: true}) );\n  }\n\n  timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s * 1000));\n  }\n\n} //https://www.npmjs.com/package/cordova-plugin-bluetoothle\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n//bond/unbond\n//discover","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx"],"names":["React","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonIcon","IonAlert","IonTabs","IonTabBar","IonTabButton","IonRouterOutlet","IonLabel","IonSpinner","IonFooter","isPlatform","chevronForward","wifiOutline","bluetoothOutline","BluetoothLE","BluetoothSerial","OpenNativeSettings","BluetoothDeviceItem","bluetoothDevices","Main","Component","bluetooth","Bluetooth","ble","bls","state","isBluetoothNotEnabled","isErrorConnecting","isContinueNoDevice","componentDidMount","bluetoothInitialize","render","map","el","text","handler","console","log","document","addEventListener","scan","open","constructor","props","handleClick","connect","timeout","isCordova","discoverUnpaired","then","result","id","forEach","element","connectingState","mac","currDev","Array","prototype","slice","call","getElementsByClassName","i","a","toString","push","setState","checkEnabled","s","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  IonHeader, \n  IonToolbar, \n  IonTitle, \n  IonContent, \n  IonList, \n  IonIcon, \n  IonAlert, \n  IonTabs, \n  IonTabBar, \n  IonTabButton, \n  IonRouterOutlet, \n  IonLabel, \n  IonSpinner, \n  IonFooter, \n  isPlatform \n} from '@ionic/react';\nimport { \n  chevronForward, \n  wifiOutline, \n  bluetoothOutline \n} from 'ionicons/icons';\n\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { OpenNativeSettings } from '@ionic-native/open-native-settings';\n\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\n\nimport { bluetoothDevices }  from '../../../globals/globals'\n\nimport './index.css';\n\ninterface MainState {\n  isBluetoothNotEnabled: boolean;\n  isErrorConnecting: boolean;\n  isContinueNoDevice: boolean;\n}\n\nclass Main extends React.Component<{}, MainState> {\n    bluetooth = new Bluetooth({ble: BluetoothLE, bls: BluetoothSerial});\n\n    state = {\n      isBluetoothNotEnabled: false,\n      isErrorConnecting: false,\n      isContinueNoDevice: false,\n    }\n\n  componentDidMount() {\n    this.bluetooth.bluetoothInitialize();\n    //this.scanClass.scan(10);\n  }\n\n  render() {\n    return (\n      <IonContent class=\"main-page\">\n\n        <IonHeader>\n          <IonToolbar class=\"main-toolbar\">\n            <IonTitle class=\"main-toolbar-title\" size=\"large\">Select A Device</IonTitle>\n            <IonIcon icon={chevronForward} class=\"next-button\" slot=\"end\"></IonIcon>\n          </IonToolbar>\n        </IonHeader>\n        <IonSpinner class=\"single-refresh-spinner\"></IonSpinner>\n        \n        <IonContent class=\"mid-content\">\n\n          <IonList class=\"device-list\">\n            {\n              bluetoothDevices.map(el => el)\n            }\n          </IonList>\n        </IonContent>\n\n        <IonFooter>\n          <IonToolbar class=\"footer-toolbar\">\n            <IonTabs>\n              <IonRouterOutlet></IonRouterOutlet>\n              <IonTabBar slot=\"bottom\" class=\"tab-bar\">\n                <IonTabButton tab=\"Wifi\" href=\"/scan-devices/wifi\" disabled={true}>\n                  <IonIcon icon={wifiOutline} class=\"button-wifi\"></IonIcon> \n                  <IonLabel class=\"button-wifi button-wifi-label\">Wifi</IonLabel>\n                </IonTabButton>\n                <IonTabButton tab=\"Bluetooth\" href=\"/scan-devices/bluetooth\">\n                  <IonIcon icon={bluetoothOutline} class=\"button-bluetooth\"></IonIcon>\n                  <IonLabel class=\"button-bluetooth button-bluetooth-label\">Bluetooth</IonLabel>\n\n                </IonTabButton>\n              </IonTabBar>\n            </IonTabs>\n          </IonToolbar>\n        </IonFooter>\n        <IonAlert\n          isOpen={this.state.isContinueNoDevice}\n          header={'Continue?'}\n          message={'Are you sure you want to continue without selecting a device?'}\n          buttons={[\n            { text: 'Cancel', },\n            {\n              text: 'Okay',\n              handler: () => {\n                console.log('continue ok'); //move to next screen\n              }\n            }\n          ]}\n        />\n        <IonAlert\n          isOpen={this.state.isBluetoothNotEnabled}\n          header={'Error'}\n          message={'Bluetooth is not enabled. Please enable Bluetooth and try again.'}\n          buttons={[\n            {\n              text: 'Settings',\n              handler: () => {\n                document.addEventListener(\"resume\", () => {\n                  this.bluetooth.bluetoothInitialize();\n                  this.bluetooth.scan(10);\n                }, false);\n                console.log('opening settings');\n                OpenNativeSettings.open(\"bluetooth\");\n              }\n            },\n            {\n              text: 'Okay',\n              handler: () => {\n                this.bluetooth.bluetoothInitialize();\n                this.bluetooth.scan(10);\n              }\n            }\n          ]\n        }\n        />\n        <IonAlert\n          isOpen={this.state.isErrorConnecting}\n          header={'Error'}\n          message={'There was an error connecting to the Bluetooth device. Make sure the device is turned on and try again.'}\n          buttons={['OK']}\n        />\n      </IonContent>\n    );\n  };\n};\nexport default Main;\n\ninterface Props {\n  ble: typeof BluetoothLE;\n  bls: typeof BluetoothSerial;\n}\ninterface BluetoothState {\n  connectingState: string;\n  isCordova: boolean;\n}\n\nclass Bluetooth extends React.Component<Props, BluetoothState> {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      connectingState: 'not_connected',\n      isCordova: false,\n    };\n\n   }\n\n   handleClick = (state) => {\n      console.log(state);\n      //this.setState({ connectingState: state });\n      this.connect(\"s\");\n   }\n\n   scan = async (timeout) => {\n    if(this.state.isCordova) {\n      //this.props.ble.stopScan(); //stop any current scans\n\n      console.log(\"scanning!\");\n\n      // this.props.ble.startScan( {\"allowDuplicates\": false, \"isConnectable\": true}  ).subscribe((result) => {\n      //   if(result.status === \"scanResult\") {\n      //     this.devices.push(result);\n      //   }\n      //   else if(result.status !== \"scanStarted\") {\n      //     this.checkEnabled();\n      //   }\n      // });\n\n      this.props.bls.discoverUnpaired().then(function(result) {\n        console.log(result);\n      });\n\n      await this.timeout(timeout);\n      //this.props.ble.stopScan();\n\n      console.log(\"stopped scan!\");\n    }\n  }\n\n  bluetoothInitialize() {\n\n    for(let i = 0; i < 5; i++) {\n        let a = <BluetoothDeviceItem key={i} mac={i.toString()} name={\"device_\"+i} connectingState={this.state.connectingState} onClick={(state) => this.handleClick(state)}></BluetoothDeviceItem>\n      \n      bluetoothDevices.push(a);\n    }\n\n    if (!isPlatform('cordova')) {\n      console.log(\"platform not cordova, BLE will not work!\");\n      this.setState({isCordova: true});\n      return;\n    }\n\n    this.checkEnabled();\n\n    // await this.props.ble.initialize( {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"} ).subscribe((result) => {\n    //   if(result.status === \"disabled\") {\n    //     this.checkEnabled();\n    //   }\n    // });\n\n  }\n\n  connect = (id) => {\n    bluetoothDevices.forEach(element => { //disconnecting any other currently connected devices and updating them in the list (setting them back to not connected)\n      let state = element;\n      //console.log(state);\n      if( (element.props.connectingState === 'connecting' || element.props.connectingState === 'connected') && element.props.mac !== id) {\n        const currDev = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\"));\n        //let updated = <BluetoothDeviceItem key={element.props.mac} mac={element.props.mac} name={\"hf\"} onClick={this.connect}></BluetoothDeviceItem>\n\n        //currDev[Array.prototype.slice.call(currDev[0].children).findIndex(function(data){ return data.id === id })] = updated;\n      }\n      if(element.props.connectingState === 'connecting'){\n        //stop the connection / disconnect\n      }\n      else if(element.props.connectingState === 'connected'){\n        //disconnect device\n      }\n    });\n  }\n\n\n  private checkEnabled() {\n\n    //this.props.ble.isEnabled().then(isEnabled); //is bluetooth le enabled\n    //this.props.ble.isEnabled().then(resp => !resp.isEnabled ? this.setState({isBluetoothEnabled: false}) : this.setState({isBluetoothEnabled: true}) );\n\n  }\n\n  private timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s*1000));\n  } \n}\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n\n//bond/unbond\n//discover\n\n"]},"metadata":{},"sourceType":"module"}