{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, closeOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css';\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [connectingState, setConnectingState] = useState('not_connected');\n  const [_isMounted, _setMountedState] = useState(false);\n  const {\n    onClick\n  } = Props;\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n  useEffect(() => {\n    _setMountedState(true);\n  }, []);\n\n  const stateChangeCallback = () => {\n    if (!_isMounted) return; //const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function(data){ return data.id === Props.mac })\n    //const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n    //const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex];\n\n    console.log(Props.mac); // switch(connectingState) {\n    //   case 'not_connected':\n    //     connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n    //     connectingIcon[\"icon\"] = closeOutline;\n    //     break;\n    //   case 'connecting':\n    //     spinnerIcon.opacity = 1;\n    //     connectingIcon[\"style\"][\"opacity\"] = 0;\n    //     break;\n    //   case 'connected':\n    //     spinnerIcon.opactiy = 0;\n    //     connectingIcon[\"style\"][\"opacity\"] = 1;\n    //     connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n    //     connectingIcon[\"icon\"] = checkmarkOutline;\n    // }\n  };\n\n  const wait = async () => {\n    setConnectingState('connecting');\n    let ret = await onClick(Props.mac);\n  };\n\n  return /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    class: \"item-container\",\n    onClick: wait,\n    id: Props.mac,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"start\",\n    class: \"bluetooth-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: bluetoothOutline,\n    class: \"bluetooth-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"end\",\n    class: \"connecting-icons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    class: \"connecting-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonSpinner, {\n    name: \"dots\",\n    class: \"connecting-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, Props.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-mac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, Props.mac)));\n};\nexport default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","useState","useEffect","IonIcon","IonSpinner","IonItem","IonAvatar","IonLabel","bluetoothOutline","closeOutline","BluetoothDeviceItem","Props","connectingState","setConnectingState","_isMounted","_setMountedState","onClick","stateChangeCallback","console","log","mac","wait","ret","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,cAAlE;AACA,SAASC,gBAAT,EAA6CC,YAA7C,QAAiE,gBAAjE;AAEA,OAAO,2BAAP;AAQA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQ,EAAR,KAAe;AAChD,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CZ,QAAQ,CAAC,eAAD,CAAxD;AACA,QAAM,CAAEa,UAAF,EAAcC,gBAAd,IAAmCd,QAAQ,CAAC,KAAD,CAAjD;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAcL,KAApB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACL,eAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAME,mBAAmB,GAAG,MAAM;AAChC,QAAG,CAACH,UAAJ,EAAgB,OADgB,CAGhC;AAEA;AACA;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,GAAlB,EARgC,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAzBD;;AA2BA,QAAMC,IAAI,GAAG,YAAY;AACvBR,IAAAA,kBAAkB,CAAC,YAAD,CAAlB;AAEA,QAAIS,GAAG,GAAG,MAAMN,OAAO,CAACL,KAAK,CAACS,GAAP,CAAvB;AACD,GAJD;;AAMA,sBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,gBAA5B;AAA6C,IAAA,OAAO,EAAEC,IAAtD;AAA4D,IAAA,EAAE,EAAEV,KAAK,CAACS,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAC,0BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEZ,gBAAf;AAAiC,IAAA,KAAK,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEC,YAAf;AAA6B,IAAA,KAAK,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,eAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BE,KAAK,CAACY,IAApC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BZ,KAAK,CAACS,GAAnC,CAFF,CARF,CADF;AAgBD,CAhEM;AAiEP,eAAeV,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n\ninterface Props {\n  name: string;\n  mac: string;\n  isConnected: string;\n}\n\nexport const BluetoothDeviceItem = (Props, {}) => {\n  const [ connectingState, setConnectingState ] = useState('not_connected');\n  const [ _isMounted, _setMountedState ] = useState(false);\n\n  const { onClick } = Props;\n\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n\n  useEffect(() => {\n    _setMountedState(true);\n  }, []);\n\n\n  const stateChangeCallback = () => {\n    if(!_isMounted) return;\n\n    //const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function(data){ return data.id === Props.mac })\n\n    //const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n    //const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex];\n\n    console.log(Props.mac);\n\n    // switch(connectingState) {\n    //   case 'not_connected':\n    //     connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n    //     connectingIcon[\"icon\"] = closeOutline;\n    //     break;\n    //   case 'connecting':\n    //     spinnerIcon.opacity = 1;\n    //     connectingIcon[\"style\"][\"opacity\"] = 0;\n    //     break;\n    //   case 'connected':\n    //     spinnerIcon.opactiy = 0;\n    //     connectingIcon[\"style\"][\"opacity\"] = 1;\n    //     connectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n    //     connectingIcon[\"icon\"] = checkmarkOutline;\n    // }\n  }\n\n  const wait = async () => {\n    setConnectingState('connecting');\n\n    let ret = await onClick(Props.mac);\n  }\n\n  return (\n    <IonItem lines=\"none\" class=\"item-container\" onClick={wait} id={Props.mac}>\n      <IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n        <IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n      </IonAvatar>\n      <IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n        <IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n        <IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n      </IonAvatar>\n      <IonLabel>\n        <div className=\"device-name\">{Props.name}</div>\n        <div className=\"device-mac\">{Props.mac}</div>\n      </IonLabel>\n    </IonItem>\n  );\n\n}\nexport default BluetoothDeviceItem;\n"]},"metadata":{},"sourceType":"module"}