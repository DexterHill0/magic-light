{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx\";\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonIcon, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonRefresher, IonRefresherContent, IonSpinner, IonFooter } from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline } from 'ionicons/icons';\nimport './index.css';\nimport { isPlatform } from '@ionic/react';\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\n\nclass Main extends React.Component {\n  componentDidMount() {\n    let a = new scanForDevices(BluetoothLE);\n    a.bluetoothInitialize();\n    a.scan(10);\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, {\n      class: \"main-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"main-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      class: \"main-toolbar-title\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Select A Device\"), /*#__PURE__*/React.createElement(IonIcon, {\n      icon: chevronForward,\n      class: \"next-button\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(IonSpinner, {\n      class: \"single-refresh-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonContent, {\n      class: \"mid-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonList, {\n      class: \"device-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IonRefresher, {\n      slot: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonRefresherContent, {\n      pullingText: \"Pull to refresh\",\n      refreshingText: \"Refreshing...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(IonFooter, {\n      class: \"main-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterOutlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IonTabBar, {\n      slot: \"bottom\",\n      class: \"tab-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Wifi\",\n      href: \"/scan-devices/wifi\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: wifiOutline,\n      class: \"button-wifi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-wifi button-wifi-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Wifi\")), /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Bluetooth\",\n      href: \"/scan-devices/bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: bluetoothOutline,\n      class: \"button-bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-bluetooth button-bluetooth-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, \"Bluetooth\")))))));\n  }\n\n}\n\n; //is await good?\n\nclass scanForDevices {\n  //how can this be cleaned up?\n  constructor(ble) {\n    this.ble = ble;\n    this.initializeParams = void 0;\n    this.scanParams = void 0;\n    this.isCordova = void 0;\n\n    this.scan = async timeout => {\n      if (this.isCordova) {\n        console.log(\"scanning!\");\n        this.ble.startScan(this.scanParams).subscribe(result => {\n          if (result.status === \"scanResult\") {\n            this.addDevice(result);\n          } else if (result.status !== \"scanStarted\") {\n            this.checkEnabled(); //warn user about not scanning\n          }\n        });\n        await this.timeout(timeout);\n        this.ble.stopScan();\n        console.log(\"stopped scan!\");\n      }\n    };\n\n    this.bluetoothInitialize = async () => {\n      if (!isPlatform('cordova')) {\n        console.log(\"Platform not cordova, BLE will not work!\");\n        this.isCordova = false;\n        return;\n      }\n\n      this.checkEnabled();\n      await this.ble.initialize(this.initializeParams).subscribe(result => {\n        if (result.status === \"disabled\") {\n          this.checkEnabled();\n        }\n      });\n    };\n\n    this.ble = ble;\n    this.initializeParams = {\n      \"request\": true,\n      \"statusReceiver\": false,\n      \"restoreKey\": \"magic-light-ble\"\n    };\n    this.scanParams = {\n      \"allowDuplicates\": false,\n      \"isConnectable\": true,\n      \"_isScalar\": true\n    };\n    this.isCordova = true;\n  }\n\n  checkEnabled() {\n    this.ble.isEnabled().then(function (isEnabled) {\n      if (!isEnabled.isEnabled) {\n        console.log(\"bluetooth **not** enabled!\"); //tell user about bluetooth (ionalert)\n      }\n    });\n  }\n\n  addDevice(device) {\n    let list = document.getElementsByClassName(\"device-list\")[0]; //list.appendChild(document.createElement(\"bl-device\"));\n  }\n\n  timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s * 1000));\n  }\n\n} //https://www.npmjs.com/package/cordova-plugin-bluetoothle\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n//maybe:\n//bond/unbond\n//discover\n//difference between discover and scan??\n\n\nexport default Main;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx"],"names":["React","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonIcon","IonTabs","IonTabBar","IonTabButton","IonRouterOutlet","IonLabel","IonRefresher","IonRefresherContent","IonSpinner","IonFooter","chevronForward","wifiOutline","bluetoothOutline","isPlatform","BluetoothLE","Main","Component","componentDidMount","a","scanForDevices","bluetoothInitialize","scan","componentWillUnmount","render","constructor","ble","initializeParams","scanParams","isCordova","timeout","console","log","startScan","subscribe","result","status","addDevice","checkEnabled","stopScan","initialize","isEnabled","then","device","list","document","getElementsByClassName","s","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem, IonIcon, IonAlert, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonRefresher, IonRefresherContent, IonSpinner, IonFooter} from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline, subway } from 'ionicons/icons';\n\n\nimport './index.css';\n\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\nimport { BluetoothDevice } from '../../../interfaces/BluetoothDevice';\n\nimport { isPlatform } from '@ionic/react'\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\n\nclass Main extends React.Component {\n\n  componentDidMount() {\n    let a = new scanForDevices(BluetoothLE);\n    a.bluetoothInitialize();\n    a.scan(10);\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    return (\n      <IonContent class=\"main-page\">\n\n        <IonHeader>\n          <IonToolbar class=\"main-toolbar\">\n            <IonTitle class=\"main-toolbar-title\" size=\"large\">Select A Device</IonTitle>\n            <IonIcon icon={chevronForward} class=\"next-button\" slot=\"end\"></IonIcon>\n          </IonToolbar>\n        </IonHeader>\n        <IonSpinner class=\"single-refresh-spinner\"></IonSpinner>\n        \n        <IonContent class=\"mid-content\">\n          <IonList class=\"device-list\">\n          </IonList>\n          <IonRefresher slot=\"fixed\">\n              <IonRefresherContent\n                pullingText=\"Pull to refresh\"\n                refreshingText=\"Refreshing...\">\n              </IonRefresherContent>\n          </IonRefresher>\n        </IonContent>\n\n        <IonFooter class=\"main-footer\">\n          <IonToolbar>\n            <IonTabs>\n              <IonRouterOutlet></IonRouterOutlet>\n              <IonTabBar slot=\"bottom\" class=\"tab-bar\">\n                <IonTabButton tab=\"Wifi\" href=\"/scan-devices/wifi\" disabled={true}>\n                  <IonIcon icon={wifiOutline} class=\"button-wifi\"></IonIcon> \n                  <IonLabel class=\"button-wifi button-wifi-label\">Wifi</IonLabel>\n                </IonTabButton>\n                <IonTabButton tab=\"Bluetooth\" href=\"/scan-devices/bluetooth\">\n                  <IonIcon icon={bluetoothOutline} class=\"button-bluetooth\"></IonIcon>\n                  <IonLabel class=\"button-bluetooth button-bluetooth-label\">Bluetooth</IonLabel>\n\n                </IonTabButton>\n              </IonTabBar>\n            </IonTabs>\n          </IonToolbar>\n        </IonFooter>\n\n        {/*<IonAlert\n          isOpen={true}\n          header={'Continue?'}\n          message={'Are you sure you want to continue without selecting a device?'}\n          buttons={['Cancel', 'Continue']}\n        />*/}\n        {/*<IonAlert\n          isOpen={true}\n          header={'Try Again'}\n          message={'Bluetooth is not enabled. Please enable Bluetooth and try again.'}\n          buttons={['Refresh', 'Settings']}\n        />*/}\n        {/*<IonAlert\n          isOpen={true}\n          header={'Error'}\n          message={'There was an error connecting to the Bluetooth device. Make sure you are selecting the right device and try again.'}\n          buttons={['OK']}\n        />*/}\n\n      </IonContent>\n    );\n  };\n};\n\n//is await good?\n\nclass scanForDevices {\n  initializeParams: { request: boolean; statusReceiver: boolean; restoreKey: string; }; //how can this be cleaned up?\n  scanParams: { allowDuplicates: boolean; isConnectable: boolean; _isScalar: boolean};\n  isCordova: boolean;\n\n  constructor(public ble: typeof BluetoothLE) {\n    this.ble = ble;\n\n    this.initializeParams = {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"};\n    this.scanParams = {\"allowDuplicates\": false, \"isConnectable\": true, \"_isScalar\": true} ;\n    this.isCordova = true;\n   }\n\n   scan = async (timeout) => {\n    if(this.isCordova) {\n      console.log(\"scanning!\");\n\n      this.ble.startScan(this.scanParams).subscribe((result) => {\n        if(result.status === \"scanResult\") {\n          this.addDevice(result);\n        }\n        else if(result.status !== \"scanStarted\") {\n          this.checkEnabled();\n          //warn user about not scanning\n        }\n      });\n\n      await this.timeout(timeout);\n      this.ble.stopScan();\n\n      console.log(\"stopped scan!\");\n    }\n  }\n\n  bluetoothInitialize = async () => {\n\n    if (!isPlatform('cordova')) {\n      console.log(\"Platform not cordova, BLE will not work!\");\n      this.isCordova = false;\n      return;\n    }\n\n    this.checkEnabled();\n\n    await this.ble.initialize(this.initializeParams).subscribe((result) => {\n      if(result.status === \"disabled\") {\n        this.checkEnabled();\n      }\n    });\n  }\n\n  private checkEnabled() {\n    this.ble.isEnabled().then(function(isEnabled) {\n      if(!isEnabled.isEnabled) {\n        console.log(\"bluetooth **not** enabled!\");\n          //tell user about bluetooth (ionalert)\n      }\n    });\n  }\n\n  private addDevice(device) {\n    let list = document.getElementsByClassName(\"device-list\")[0];\n    //list.appendChild(document.createElement(\"bl-device\"));\n  }\n\n  private timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s*1000));\n  } \n}\n\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n\n//maybe:\n//bond/unbond\n//discover\n\n//difference between discover and scan??\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}