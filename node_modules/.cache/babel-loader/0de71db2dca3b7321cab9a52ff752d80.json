{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx\";\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n//bond/unbond\n//discover\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel } from '@ionic/react';\nimport { bluetoothOutline, closeOutline } from 'ionicons/icons';\nimport './BluetoothDeviceItem.css';\n\nconst BluetoothDeviceItem = Props => {\n  const [connectingState, setConnectingState] = useState(Props.state());\n  useEffect(() => {\n    stateChangeCallback();\n  }, [connectingState]);\n  const {\n    onClick\n  } = Props;\n\n  const stateChangeCallback = () => {\n    const elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function (data) {\n      return data.id === Props.mac;\n    });\n    const connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n    const spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"]; // switch (connectingState) {\n    // \tcase 'not_connected':\n    // \t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n    // \t\tconnectingIcon[\"icon\"] = closeOutline;\n    // \t\tbreak;\n    // \tcase 'connecting':\n    // \t\tspinnerIcon.opacity = 1;\n    // \t\tconnectingIcon[\"style\"][\"opacity\"] = 0;\n    // \t\tbreak;\n    // \tcase 'connected':\n    // \t\tspinnerIcon.opactiy = 0;\n    // \t\tconnectingIcon[\"style\"][\"opacity\"] = 1;\n    // \t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n    // \t\tconnectingIcon[\"icon\"] = checkmarkOutline;\n    // }\n  };\n\n  const rerender = () => {\n    setConnectingState(Props.state());\n  };\n\n  const wait = async () => {\n    //setConnectingState(Props.state());\n    onClick(Props.mac); //console.log(Props.state())\n\n    setConnectingState(Props.state());\n  };\n\n  return /*#__PURE__*/React.createElement(Item, Object.assign({}, Props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }));\n};\n\nconst Item = React.forwardRef((Props, ref) => {\n  return console.log(Props.children.valueOf()), /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    class: \"item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"start\",\n    class: \"bluetooth-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: bluetoothOutline,\n    class: \"bluetooth-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"end\",\n    class: \"connecting-icons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    class: \"connecting-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(IonSpinner, {\n    name: \"dots\",\n    class: \"connecting-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-mac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  })));\n});\nexport default BluetoothDeviceItem;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/components/bluetooth/BluetoothDeviceItem.tsx"],"names":["React","useState","useEffect","IonIcon","IonSpinner","IonItem","IonAvatar","IonLabel","bluetoothOutline","closeOutline","BluetoothDeviceItem","Props","connectingState","setConnectingState","state","stateChangeCallback","onClick","elementIndex","Array","prototype","slice","call","document","getElementsByClassName","children","findIndex","data","id","mac","connectingIcon","spinnerIcon","rerender","wait","Item","forwardRef","ref","console","log","valueOf"],"mappings":";AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAiE,cAAjE;AACA,SAASC,gBAAT,EAA6CC,YAA7C,QAAiE,gBAAjE;AAEA,OAAO,2BAAP;;AASA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAACU,KAAK,CAACG,KAAN,EAAD,CAAtD;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,mBAAmB;AACnB,GAFQ,EAEN,CAACH,eAAD,CAFM,CAAT;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAcL,KAApB;;AAEA,QAAMI,mBAAmB,GAAG,MAAM;AACjC,UAAME,YAAY,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,EAAkDC,QAA7E,EAAuFC,SAAvF,CAAiG,UAAUC,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACC,EAAL,KAAYhB,KAAK,CAACiB,GAAzB;AAA8B,KAAjJ,CAArB;AACA,UAAMC,cAAc,GAAGP,QAAQ,CAACC,sBAAT,CAAgC,kBAAhC,EAAoDN,YAApD,CAAvB;AACA,UAAMa,WAAW,GAAGR,QAAQ,CAACC,sBAAT,CAAgC,oBAAhC,EAAsDN,YAAtD,EAAoE,OAApE,CAApB,CAHiC,CAKjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GApBD;;AAsBA,QAAMc,QAAQ,GAAG,MAAM;AACtBlB,IAAAA,kBAAkB,CAACF,KAAK,CAACG,KAAN,EAAD,CAAlB;AACA,GAFD;;AAIA,QAAMkB,IAAI,GAAG,YAAY;AACxB;AAEAhB,IAAAA,OAAO,CAACL,KAAK,CAACiB,GAAP,CAAP,CAHwB,CAKxB;;AAEAf,IAAAA,kBAAkB,CAACF,KAAK,CAACG,KAAN,EAAD,CAAlB;AACA,GARD;;AAUA,sBACC,oBAAC,IAAD,oBAAUH,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAGA,CA/CD;;AAiDA,MAAMsB,IAAI,GAAGjC,KAAK,CAACkC,UAAN,CAAiB,CAACvB,KAAD,EAAQwB,GAAR,KAAgB;AAC7C,SACCC,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAACa,QAAN,CAAec,OAAf,EAAZ,gBACA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAC,0BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE9B,gBAAf;AAAiC,IAAA,KAAK,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEC,YAAf;AAA6B,IAAA,KAAK,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAJD,eAQC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CARD,CAFD;AAgBA,CAjBY,CAAb;AAmBA,eAAeC,mBAAf","sourcesContent":["\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n\n//bond/unbond\n//discover\n\n\nimport React, { useState, useEffect } from 'react';\nimport { IonIcon, IonSpinner, IonItem, IonAvatar, IonLabel} from '@ionic/react';\nimport { bluetoothOutline, checkmarkOutline, closeOutline } from 'ionicons/icons';\n\nimport './BluetoothDeviceItem.css';\n\n\ninterface Props {\n\tname: string;\n\tmac: string;\n\tsetState: any;\n}\n\nconst BluetoothDeviceItem = (Props) => {\n\tconst [connectingState, setConnectingState] = useState(Props.state());\n\tuseEffect(() => {\n\t\tstateChangeCallback();\n\t}, [connectingState]);\n\n\tconst { onClick } = Props;\n\n\tconst stateChangeCallback = () => {\n\t\tconst elementIndex = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children).findIndex(function (data) { return data.id === Props.mac })\n\t\tconst connectingIcon = document.getElementsByClassName(\"connecting-icons\")[elementIndex];\n\t\tconst spinnerIcon = document.getElementsByClassName(\"connecting-spinner\")[elementIndex][\"style\"];\n\n\t\t// switch (connectingState) {\n\t\t// \tcase 'not_connected':\n\t\t// \t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-danger)\";\n\t\t// \t\tconnectingIcon[\"icon\"] = closeOutline;\n\t\t// \t\tbreak;\n\t\t// \tcase 'connecting':\n\t\t// \t\tspinnerIcon.opacity = 1;\n\t\t// \t\tconnectingIcon[\"style\"][\"opacity\"] = 0;\n\t\t// \t\tbreak;\n\t\t// \tcase 'connected':\n\t\t// \t\tspinnerIcon.opactiy = 0;\n\t\t// \t\tconnectingIcon[\"style\"][\"opacity\"] = 1;\n\t\t// \t\tconnectingIcon[\"style\"][\"color\"] = \"var(--ion-color-success)\";\n\t\t// \t\tconnectingIcon[\"icon\"] = checkmarkOutline;\n\t\t// }\n\t}\n\n\tconst rerender = () => {\n\t\tsetConnectingState(Props.state());\n\t}\n\n\tconst wait = async () => {\n\t\t//setConnectingState(Props.state());\n\n\t\tonClick(Props.mac);\n\n\t\t//console.log(Props.state())\n\n\t\tsetConnectingState(Props.state());\n\t}\n\n\treturn (\n\t\t<Item {...Props}></Item>\n\t);\n}\n\nconst Item = React.forwardRef((Props, ref) => {\n\treturn (\n\t\tconsole.log(Props.children.valueOf()),\n\t\t<IonItem lines=\"none\" class=\"item-container\">\n\t\t\t<IonAvatar slot=\"start\" class=\"bluetooth-icon-container\">\n\t\t\t\t<IonIcon icon={bluetoothOutline} class=\"bluetooth-icon\"></IonIcon>\n\t\t\t</IonAvatar>\n\t\t\t<IonAvatar slot=\"end\" class=\"connecting-icons-container\">\n\t\t\t\t<IonIcon icon={closeOutline} class=\"connecting-icons\"></IonIcon>\n\t\t\t\t<IonSpinner name=\"dots\" class=\"connecting-spinner\"></IonSpinner>\n\t\t\t</IonAvatar>\n\t\t\t<IonLabel>\n\t\t\t\t<div className=\"device-name\"></div>\n\t\t\t\t<div className=\"device-mac\"></div>\n\t\t\t</IonLabel>\n\t\t</IonItem>\n\t);\n});\n\nexport default BluetoothDeviceItem;"]},"metadata":{},"sourceType":"module"}