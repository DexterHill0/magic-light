{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx\";\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonIcon, IonAlert, IonSpinner } from '@ionic/react';\nimport { chevronForward } from 'ionicons/icons';\nimport { isPlatform } from '@ionic/react';\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { OpenNativeSettings } from '@ionic-native/open-native-settings';\nimport './index.css';\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem'; //import BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\n//import { BluetoothDevice } from '../../../interfaces/BluetoothDevice';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.scanClass = new scanForDevices(BluetoothLE, BluetoothSerial);\n    this.state = {\n      isBluetoothEnabled: true,\n      isErrorConnecting: false,\n      isContinueNoDevice: false\n    };\n  }\n\n  componentDidMount() {\n    this.scanClass.bluetoothInitialize(); //this.scanClass.scan(10);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, {\n      class: \"main-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"main-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      class: \"main-toolbar-title\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Select A Device\"), /*#__PURE__*/React.createElement(IonIcon, {\n      icon: chevronForward,\n      class: \"next-button\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(IonSpinner, {\n      class: \"single-refresh-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonContent, {\n      class: \"mid-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonList, {\n      class: \"device-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.isContinueNoDevice,\n      header: 'Continue?',\n      message: 'Are you sure you want to continue without selecting a device?',\n      buttons: [{\n        text: 'Cancel'\n      }, {\n        text: 'Okay',\n        handler: () => {\n          console.log('continue ok'); //move to next screen\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: !this.state.isBluetoothEnabled,\n      header: 'Error',\n      message: 'Bluetooth is not enabled. Please enable Bluetooth and try again.',\n      buttons: [{\n        text: 'Settings',\n        handler: () => {\n          document.addEventListener(\"resume\", () => {\n            this.scanClass.bluetoothInitialize();\n            this.scanClass.scan(10);\n          }, false);\n          console.log('opening settings');\n          OpenNativeSettings.open(\"bluetooth\");\n        }\n      }, {\n        text: 'Okay',\n        handler: () => {\n          this.scanClass.bluetoothInitialize();\n          this.scanClass.scan(10);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IonAlert, {\n      isOpen: this.state.isErrorConnecting,\n      header: 'Error',\n      message: 'There was an error connecting to the Bluetooth device. Make sure the device is turned on and try again.',\n      buttons: ['OK'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default Main;\n\nclass scanForDevices {\n  constructor(ble, bls) {\n    this.ble = ble;\n    this.bls = bls;\n    this.isCordova = void 0;\n    this.devices = void 0;\n\n    this.scan = async timeout => {\n      if (this.isCordova) {\n        //this.ble.stopScan(); //stop any current scans\n        console.log(\"scanning!\"); // this.ble.startScan( {\"allowDuplicates\": false, \"isConnectable\": true}  ).subscribe((result) => {\n        //   if(result.status === \"scanResult\") {\n        //     this.devices.push(result);\n        //   }\n        //   else if(result.status !== \"scanStarted\") {\n        //     this.checkEnabled();\n        //   }\n        // });\n\n        this.bls.discoverUnpaired().then(function (result) {\n          console.log(result);\n        });\n        await this.timeout(timeout); //this.ble.stopScan();\n\n        console.log(\"stopped scan!\");\n      }\n    };\n\n    this.ble = ble;\n    this.isCordova = true;\n    this.devices = [];\n  }\n\n  bluetoothInitialize() {\n    if (!isPlatform('cordova')) {\n      console.log(\"platform not cordova, BLE will not work!\");\n      this.isCordova = false;\n      return;\n    }\n\n    this.checkEnabled(); // await this.ble.initialize( {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"} ).subscribe((result) => {\n    //   if(result.status === \"disabled\") {\n    //     this.checkEnabled();\n    //   }\n    // });\n  }\n\n  checkEnabled() {//this.ble.isEnabled().then(isEnabled); //is bluetooth le enabled\n    //this.ble.isEnabled().then(resp => !resp.isEnabled ? this.setState({isBluetoothEnabled: false}) : this.setState({isBluetoothEnabled: true}) );\n  }\n\n  addDevice(device) {\n    let list = document.getElementsByClassName(\"device-list\")[0]; //list.appendChild(document.createElement(\"bl-device\"));\n  }\n\n  timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s * 1000));\n  }\n\n} //https://www.npmjs.com/package/cordova-plugin-bluetoothle\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n//bond/unbond\n//discover","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx"],"names":["React","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonIcon","IonAlert","IonSpinner","chevronForward","isPlatform","BluetoothLE","BluetoothSerial","OpenNativeSettings","BluetoothDeviceItem","Main","Component","scanClass","scanForDevices","state","isBluetoothEnabled","isErrorConnecting","isContinueNoDevice","componentDidMount","bluetoothInitialize","render","text","handler","console","log","document","addEventListener","scan","open","constructor","ble","bls","isCordova","devices","timeout","discoverUnpaired","then","result","checkEnabled","addDevice","device","list","getElementsByClassName","s","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonIcon, IonAlert, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonRefresher, IonRefresherContent, IonSpinner, IonFooter, IonToast} from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline } from 'ionicons/icons';\n\nimport { isPlatform } from '@ionic/react'\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { OpenNativeSettings } from '@ionic-native/open-native-settings';\n\nimport './index.css';\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\n\n//import BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\n//import { BluetoothDevice } from '../../../interfaces/BluetoothDevice';\n\ninterface State {\n  isBluetoothEnabled: boolean;\n  isErrorConnecting: boolean;\n  isContinueNoDevice: boolean;\n}\n\nclass Main extends React.Component<{}, State> {\n    scanClass = new scanForDevices(BluetoothLE, BluetoothSerial);\n\n    state = {\n      isBluetoothEnabled: true,\n      isErrorConnecting: false,\n      isContinueNoDevice: false,\n    }\n\n\n  componentDidMount() {\n\n    this.scanClass.bluetoothInitialize();\n    //this.scanClass.scan(10);\n  }\n\n  render() {\n    return (\n      <IonContent class=\"main-page\">\n\n        <IonHeader>\n          <IonToolbar class=\"main-toolbar\">\n            <IonTitle class=\"main-toolbar-title\" size=\"large\">Select A Device</IonTitle>\n            <IonIcon icon={chevronForward} class=\"next-button\" slot=\"end\"></IonIcon>\n          </IonToolbar>\n        </IonHeader>\n        <IonSpinner class=\"single-refresh-spinner\"></IonSpinner>\n        \n        <IonContent class=\"mid-content\">\n          <IonList class=\"device-list\">\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n          </IonList>\n        </IonContent>\n\n        \n        <IonAlert\n          isOpen={this.state.isContinueNoDevice}\n          header={'Continue?'}\n          message={'Are you sure you want to continue without selecting a device?'}\n          buttons={[\n            { text: 'Cancel', },\n            {\n              text: 'Okay',\n              handler: () => {\n                console.log('continue ok'); //move to next screen\n              }\n            }\n          ]}\n        />\n        <IonAlert\n          isOpen={!this.state.isBluetoothEnabled}\n          header={'Error'}\n          message={'Bluetooth is not enabled. Please enable Bluetooth and try again.'}\n          buttons={[\n            {\n              text: 'Settings',\n              handler: () => {\n                document.addEventListener(\"resume\", () => {\n                  this.scanClass.bluetoothInitialize();\n                  this.scanClass.scan(10);\n                }, false);\n                console.log('opening settings');\n                OpenNativeSettings.open(\"bluetooth\");\n              }\n            },\n            {\n              text: 'Okay',\n              handler: () => {\n                this.scanClass.bluetoothInitialize();\n                this.scanClass.scan(10);\n              }\n            }\n          ]\n        }\n        />\n        <IonAlert\n          isOpen={this.state.isErrorConnecting}\n          header={'Error'}\n          message={'There was an error connecting to the Bluetooth device. Make sure the device is turned on and try again.'}\n          buttons={['OK']}\n        />\n      </IonContent>\n    );\n  };\n};\nexport default Main;\n\nclass scanForDevices {\n  isCordova: boolean;\n  devices: any[];\n\n  constructor(public ble: typeof BluetoothLE, public bls: typeof BluetoothSerial) {\n    this.ble = ble;\n    this.isCordova = true;\n    this.devices = [];\n   }\n\n   scan = async (timeout) => {\n    if(this.isCordova) {\n      //this.ble.stopScan(); //stop any current scans\n\n      console.log(\"scanning!\");\n\n      // this.ble.startScan( {\"allowDuplicates\": false, \"isConnectable\": true}  ).subscribe((result) => {\n      //   if(result.status === \"scanResult\") {\n      //     this.devices.push(result);\n      //   }\n      //   else if(result.status !== \"scanStarted\") {\n      //     this.checkEnabled();\n      //   }\n      // });\n\n      this.bls.discoverUnpaired().then(function(result) {\n        console.log(result);\n      });\n\n      await this.timeout(timeout);\n      //this.ble.stopScan();\n\n      console.log(\"stopped scan!\");\n    }\n  }\n\n  bluetoothInitialize() {\n\n    if (!isPlatform('cordova')) {\n      console.log(\"platform not cordova, BLE will not work!\");\n      this.isCordova = false;\n      return;\n    }\n\n    this.checkEnabled();\n\n    // await this.ble.initialize( {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"} ).subscribe((result) => {\n    //   if(result.status === \"disabled\") {\n    //     this.checkEnabled();\n    //   }\n    // });\n  }\n\n  private checkEnabled() {\n\n    //this.ble.isEnabled().then(isEnabled); //is bluetooth le enabled\n    //this.ble.isEnabled().then(resp => !resp.isEnabled ? this.setState({isBluetoothEnabled: false}) : this.setState({isBluetoothEnabled: true}) );\n\n  }\n\n  private addDevice(device) {\n    let list = document.getElementsByClassName(\"device-list\")[0];\n    //list.appendChild(document.createElement(\"bl-device\"));\n  }\n\n  private timeout(s) {\n    return new Promise(resolve => setTimeout(resolve, s*1000));\n  } \n}\n\n//https://www.npmjs.com/package/cordova-plugin-bluetoothle\n\n//startScan => connect => ...\n//                        disconnect => close\n//                        connect => disconnect => close => connect\n//::updating icons::\n\n//bond/unbond\n//discover\n\n"]},"metadata":{},"sourceType":"module"}