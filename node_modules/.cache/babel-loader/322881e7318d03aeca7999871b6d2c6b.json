{"ast":null,"code":"var _jsxFileName = \"/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx\";\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonIcon, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonSpinner, IonFooter } from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline } from 'ionicons/icons';\nimport './index.css';\nimport BluetoothDeviceItem from '../../../components/bluetooth/Bluetooth';\nimport { bluetoothDevices } from '../../../globals/globals';\nconst devices = [];\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.a = new Bluetooth({\n      bls: \"a\",\n      ble: \"a\"\n    });\n  }\n\n  componentDidMount() {\n    this.a.bluetoothInitialize();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IonContent, {\n      class: \"main-page\",\n      scrollY: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(IonHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"main-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      class: \"main-toolbar-title\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \"Select A Device\"), /*#__PURE__*/React.createElement(IonIcon, {\n      icon: chevronForward,\n      class: \"next-button\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(IonSpinner, {\n      class: \"single-refresh-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(IonContent, {\n      class: \"mid-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IonList, {\n      class: \"device-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }\n    }, devices.map(el => el))), /*#__PURE__*/React.createElement(IonFooter, {\n      class: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IonToolbar, {\n      class: \"footer-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IonTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonRouterOutlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(IonTabBar, {\n      slot: \"bottom\",\n      class: \"tab-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Wifi\",\n      href: \"/scan-devices/wifi\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: wifiOutline,\n      class: \"button-wifi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-wifi button-wifi-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }, \"Wifi\")), /*#__PURE__*/React.createElement(IonTabButton, {\n      tab: \"Bluetooth\",\n      href: \"/scan-devices/bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      icon: bluetoothOutline,\n      class: \"button-bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      class: \"button-bluetooth button-bluetooth-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    }, \"Bluetooth\")))))));\n  }\n\n}\n\n;\nexport default Main;\n\nclass Bluetooth extends React.Component {\n  constructor(Props) {\n    super(Props);\n\n    this.bluetoothInitialize = () => {\n      for (let i = 0; i < 5; i++) {\n        let a = {\n          name: \"test\",\n          mac: i.toString(),\n          connected: false\n        };\n        bluetoothDevices.push(a);\n        devices.push( /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n          key: a.mac,\n          mac: a.mac,\n          name: a.name,\n          onClick: id => this.connect(id),\n          connectingState: a.connected ? 'connected' : 'not_connected',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }));\n      }\n    };\n\n    this.connect = id => {\n      bluetoothDevices.forEach(item => {\n        //disconnecting any other currently connected devices and updating them in the list (setting them back to not connected)\n        const currentDevices = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children);\n        console.log(currentDevices);\n\n        if (id === item.mac) {\n          let updated = /*#__PURE__*/React.createElement(BluetoothDeviceItem, {\n            key: item.mac,\n            mac: item.mac,\n            name: item.name,\n            onClick: this.connect,\n            connectingState: 'connecting',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }\n          });\n          devices[currentDevices.findIndex(function (data) {\n            return data.id === id;\n          })] = updated;\n        }\n\n        console.log(devices); //let updated = <BluetoothDeviceItem key={a.mac} mac={a.mac} name={a.name} onClick={this.connect} connectingState={a.connected ? 'connected' : 'not_connected'}></BluetoothDeviceItem>\n        //updating the clicked device to connecting state\n        // if ((element.props.connectingState === 'connecting' || element.props.connectingState === 'connected') && element.props.mac !== id) {\n        // \tconst currDev = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\"));\n        // \tlet updated = <BluetoothDeviceItem key={element.props.mac} mac={element.props.mac} name={\"hf\"} onClick={this.connect}></BluetoothDeviceItem>\n        // \tcurrDev[Array.prototype.slice.call(currDev[0].children).findIndex(function(data){ return data.id === id })] = updated;\n        // }\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx"],"names":["React","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonIcon","IonTabs","IonTabBar","IonTabButton","IonRouterOutlet","IonLabel","IonSpinner","IonFooter","chevronForward","wifiOutline","bluetoothOutline","BluetoothDeviceItem","bluetoothDevices","devices","Main","Component","a","Bluetooth","bls","ble","componentDidMount","bluetoothInitialize","render","map","el","constructor","Props","i","name","mac","toString","connected","push","id","connect","forEach","item","currentDevices","Array","prototype","slice","call","document","getElementsByClassName","children","console","log","updated","findIndex","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n\tIonHeader, \n\tIonToolbar, \n\tIonTitle, \n\tIonContent, \n\tIonList, \n\tIonIcon, \n\tIonAlert, \n\tIonTabs, \n\tIonTabBar, \n\tIonTabButton, \n\tIonRouterOutlet, \n\tIonLabel, \n\tIonSpinner, \n\tIonFooter, \n\tisPlatform, \n\tIonItem\n} from '@ionic/react';\nimport { \n\tchevronForward, \n\twifiOutline, \n\tbluetoothOutline \n} from 'ionicons/icons';\n\nimport './index.css';\n\nimport BluetoothDeviceItem from '../../../components/bluetooth/Bluetooth'\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\nimport { bluetoothDevices } from '../../../globals/globals';\n\nconst devices: any[] = [];\n\ninterface Props {\n\tbls: Object;\n\tble: Object;\n}\n\nclass Main extends React.Component<{}, {}> {\n\ta = new Bluetooth({ bls: \"a\", ble: \"a\" });\n\n\tcomponentDidMount() {\n\t\tthis.a.bluetoothInitialize();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IonContent class=\"main-page\" scrollY={false}>\n\n\t\t\t\t<IonHeader>\n\t\t\t\t\t<IonToolbar class=\"main-toolbar\">\n\t\t\t\t\t\t<IonTitle class=\"main-toolbar-title\" size=\"large\">Select A Device</IonTitle>\n\t\t\t\t\t\t<IonIcon icon={chevronForward} class=\"next-button\" slot=\"end\"></IonIcon>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonHeader>\n\t\t\t\t<IonSpinner class=\"single-refresh-spinner\"></IonSpinner>\n\t\t\t\t\n\t\t\t\t<IonContent class=\"mid-content\">\n\t\t\t\t\t<IonList class=\"device-list\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdevices.map(el => el)\n\t\t\t\t\t\t}\n\t\t\t\t\t</IonList>\n\t\t\t\t</IonContent>\n\n\t\t\t\t<IonFooter class=\"footer\">\n\t\t\t\t\t<IonToolbar class=\"footer-toolbar\">\n\t\t\t\t\t\t<IonTabs>\n\t\t\t\t\t\t\t<IonRouterOutlet></IonRouterOutlet>\n\t\t\t\t\t\t\t<IonTabBar slot=\"bottom\" class=\"tab-bar\">\n\t\t\t\t\t\t\t\t<IonTabButton tab=\"Wifi\" href=\"/scan-devices/wifi\" disabled={true}>\n\t\t\t\t\t\t\t\t\t<IonIcon icon={wifiOutline} class=\"button-wifi\"></IonIcon> \n\t\t\t\t\t\t\t\t\t<IonLabel class=\"button-wifi button-wifi-label\">Wifi</IonLabel>\n\t\t\t\t\t\t\t\t</IonTabButton>\n\t\t\t\t\t\t\t\t<IonTabButton tab=\"Bluetooth\" href=\"/scan-devices/bluetooth\">\n\t\t\t\t\t\t\t\t\t<IonIcon icon={bluetoothOutline} class=\"button-bluetooth\"></IonIcon>\n\t\t\t\t\t\t\t\t\t<IonLabel class=\"button-bluetooth button-bluetooth-label\">Bluetooth</IonLabel>\n\n\t\t\t\t\t\t\t\t</IonTabButton>\n\t\t\t\t\t\t\t</IonTabBar>\n\t\t\t\t\t\t</IonTabs>\n\t\t\t\t\t</IonToolbar>\n\t\t\t\t</IonFooter>\n\t\t\t</IonContent>\n\t\t);\n\t};\n};\nexport default Main;\n\n\nclass Bluetooth extends React.Component<Props, {}> {\n\n\tconstructor(Props) {\n\t\tsuper(Props);\n\t}\n\n\tbluetoothInitialize = () => {\n\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tlet a = {name: \"test\", mac: i.toString(), connected:false}\n\t\t\tbluetoothDevices.push(a);\n\t\t\tdevices.push(<BluetoothDeviceItem key={a.mac} mac={a.mac} name={a.name} onClick={(id) => this.connect(id)} connectingState={a.connected ? 'connected' : 'not_connected'}></BluetoothDeviceItem>)\n\t\t}\n\t}\n\n\tconnect = (id) => {\n\t\tbluetoothDevices.forEach(item => { //disconnecting any other currently connected devices and updating them in the list (setting them back to not connected)\n\t\t\tconst currentDevices = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\")[0].children);\n\n\t\t\tconsole.log(currentDevices)\n\n\t\t\tif(id === item.mac) {\n\t\t\t\tlet updated = <BluetoothDeviceItem key={item.mac} mac={item.mac} name={item.name} onClick={this.connect} connectingState={'connecting'}></BluetoothDeviceItem>\t\n\n\t\t\t\tdevices[currentDevices.findIndex(function(data){ return data.id === id })] = updated;\n\t\t\t}\n\n\t\t\tconsole.log(devices);\n\n\t\t\t//let updated = <BluetoothDeviceItem key={a.mac} mac={a.mac} name={a.name} onClick={this.connect} connectingState={a.connected ? 'connected' : 'not_connected'}></BluetoothDeviceItem>\n\t\t\t\n\t\t\t//updating the clicked device to connecting state\n\n\n\t\t\t// if ((element.props.connectingState === 'connecting' || element.props.connectingState === 'connected') && element.props.mac !== id) {\n\t\t\t// \tconst currDev = Array.prototype.slice.call(document.getElementsByClassName(\"device-list\"));\n\t\t\t// \tlet updated = <BluetoothDeviceItem key={element.props.mac} mac={element.props.mac} name={\"hf\"} onClick={this.connect}></BluetoothDeviceItem>\n\n\t\t\t// \tcurrDev[Array.prototype.slice.call(currDev[0].children).findIndex(function(data){ return data.id === id })] = updated;\n\t\t\t// }\n\t\t});\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}