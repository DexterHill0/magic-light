{"ast":null,"code":"import _classCallCheck from\"/Users/everyone/Desktop/iPhone app/magic-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/everyone/Desktop/iPhone app/magic-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/everyone/Desktop/iPhone app/magic-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/everyone/Desktop/iPhone app/magic-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{IonHeader,IonToolbar,IonTitle,IonContent,IonList,IonIcon,IonTabs,IonTabBar,IonTabButton,IonRouterOutlet,IonLabel,IonRefresher,IonRefresherContent,IonSpinner,IonFooter}from'@ionic/react';import{chevronForward,wifiOutline,bluetoothOutline}from'ionicons/icons';import'./index.css';import BluetoothDeviceItem from'../../../components/bluetooth/BluetoothDeviceItem';import{isPlatform}from'@ionic/react';import{BluetoothLE}from'@ionic-native/bluetooth-le';var Main=/*#__PURE__*/function(_React$Component){_inherits(Main,_React$Component);var _super=_createSuper(Main);function Main(){_classCallCheck(this,Main);return _super.apply(this,arguments);}_createClass(Main,[{key:\"componentDidMount\",value:function componentDidMount(){new scanForDevices(BluetoothLE).scan(1);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(IonContent,{class:\"main-page\"},/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(IonToolbar,{class:\"main-toolbar\"},/*#__PURE__*/React.createElement(IonTitle,{class:\"main-toolbar-title\",size:\"large\"},\"Select A Device\"),/*#__PURE__*/React.createElement(IonIcon,{icon:chevronForward,class:\"next-button\",slot:\"end\"}))),/*#__PURE__*/React.createElement(IonSpinner,{class:\"single-refresh-spinner\"}),/*#__PURE__*/React.createElement(IonContent,{class:\"mid-content\"},/*#__PURE__*/React.createElement(IonList,{class:\"device-list\"},/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null),/*#__PURE__*/React.createElement(BluetoothDeviceItem,null)),/*#__PURE__*/React.createElement(IonRefresher,{slot:\"fixed\"},/*#__PURE__*/React.createElement(IonRefresherContent,{pullingText:\"Pull to refresh\",refreshingText:\"Refreshing...\"}))),/*#__PURE__*/React.createElement(IonFooter,{class:\"main-footer\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonTabs,null,/*#__PURE__*/React.createElement(IonRouterOutlet,null),/*#__PURE__*/React.createElement(IonTabBar,{slot:\"bottom\",class:\"tab-bar\"},/*#__PURE__*/React.createElement(IonTabButton,{tab:\"Wifi\",href:\"/scan-devices/wifi\",disabled:true},/*#__PURE__*/React.createElement(IonIcon,{icon:wifiOutline,class:\"button-wifi\"}),/*#__PURE__*/React.createElement(IonLabel,{class:\"button-wifi button-wifi-label\"},\"Wifi\")),/*#__PURE__*/React.createElement(IonTabButton,{tab:\"Bluetooth\",href:\"/scan-devices/bluetooth\"},/*#__PURE__*/React.createElement(IonIcon,{icon:bluetoothOutline,class:\"button-bluetooth\"}),/*#__PURE__*/React.createElement(IonLabel,{class:\"button-bluetooth button-bluetooth-label\"},\"Bluetooth\")))))));}}]);return Main;}(React.Component);;var scanForDevices=/*#__PURE__*/function(){function scanForDevices(ble){_classCallCheck(this,scanForDevices);this.ble=ble;this.initializeParams=void 0;this.scanParams=void 0;this.devices=void 0;this.ble=ble;this.initializeParams={\"request\":true,\"statusReceiver\":false,\"restoreKey\":\"magic-light-ble\"};this.scanParams={\"allowDuplicates\":false,\"isConnectable\":true};this.devices=[];}_createClass(scanForDevices,[{key:\"scan\",value:function scan(timeout){this.bluetoothScan(timeout);}},{key:\"bluetoothScan\",value:function bluetoothScan(timeout){var _this=this;if(!isPlatform('cordova')){console.log(\"Platform not cordova, BLE will not work!\");return;}this.checkPermissionsAndroid();var initializeResult=this.ble.initialize(this.initializeParams);if(initializeResult[\"status\"]==\"disabled\"){//Alert for bluetooth disabled. Ask to scan again / open settings.\n}this.devices=this.ble.startScan(this.scanParams);setTimeout(function(){_this.ble.stopScan();},timeout*1000);}},{key:\"checkPermissionsAndroid\",value:function checkPermissionsAndroid(){if(isPlatform('android')){var per=this.ble.hasPermission();var loc=this.ble.isLocationEnabled();if(!per[\"hasPermission\"]){this.ble.requestPermission();}if(!loc[\"requestLocation\"]){this.ble.requestLocation();}}}}]);return scanForDevices;}();///Implement checks to see if bluetooth is enabled, bluetooth has permissions (android) and so on.\n//https://github.com/randdusing/cordova-plugin-bluetoothle#permissions-android\n//Bad formatting but good info on androind permissions: https://ionicframework.com/docs/v3/native/bluetoothle/\nexport default Main;","map":{"version":3,"sources":["/Users/everyone/Desktop/iPhone app/magic-light/src/pages/scan-devices/bluetooth/index.tsx"],"names":["React","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonIcon","IonTabs","IonTabBar","IonTabButton","IonRouterOutlet","IonLabel","IonRefresher","IonRefresherContent","IonSpinner","IonFooter","chevronForward","wifiOutline","bluetoothOutline","BluetoothDeviceItem","isPlatform","BluetoothLE","Main","scanForDevices","scan","Component","ble","initializeParams","scanParams","devices","timeout","bluetoothScan","console","log","checkPermissionsAndroid","initializeResult","initialize","startScan","setTimeout","stopScan","per","hasPermission","loc","isLocationEnabled","requestPermission","requestLocation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem, IonIcon, IonAlert, IonTabs, IonTabBar, IonTabButton, IonRouterOutlet, IonLabel, IonRefresher, IonRefresherContent, IonSpinner, IonFooter} from '@ionic/react';\nimport { chevronForward, wifiOutline, bluetoothOutline } from 'ionicons/icons';\n\n\nimport './index.css';\n\nimport BluetoothDeviceItem from '../../../components/bluetooth/BluetoothDeviceItem';\nimport { BluetoothDevice } from '../../../interfaces/BluetoothDevice';\n\nimport { isPlatform } from '@ionic/react'\nimport { BluetoothLE } from '@ionic-native/bluetooth-le';\n\nclass Main extends React.Component {\n\n  componentDidMount() {\n    new scanForDevices(BluetoothLE).scan(1);\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    return (\n      <IonContent class=\"main-page\">\n\n        <IonHeader>\n          <IonToolbar class=\"main-toolbar\">\n            <IonTitle class=\"main-toolbar-title\" size=\"large\">Select A Device</IonTitle>\n            <IonIcon icon={chevronForward} class=\"next-button\" slot=\"end\"></IonIcon>\n          </IonToolbar>\n        </IonHeader>\n        <IonSpinner class=\"single-refresh-spinner\"></IonSpinner>\n        \n        <IonContent class=\"mid-content\">\n          <IonList class=\"device-list\">\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n            <BluetoothDeviceItem></BluetoothDeviceItem>\n          </IonList>\n          <IonRefresher slot=\"fixed\">\n              <IonRefresherContent\n                pullingText=\"Pull to refresh\"\n                refreshingText=\"Refreshing...\">\n              </IonRefresherContent>\n          </IonRefresher>\n        </IonContent>\n\n        <IonFooter class=\"main-footer\">\n          <IonToolbar>\n            <IonTabs>\n              <IonRouterOutlet></IonRouterOutlet>\n              <IonTabBar slot=\"bottom\" class=\"tab-bar\">\n                <IonTabButton tab=\"Wifi\" href=\"/scan-devices/wifi\" disabled={true}>\n                  <IonIcon icon={wifiOutline} class=\"button-wifi\"></IonIcon> \n                  <IonLabel class=\"button-wifi button-wifi-label\">Wifi</IonLabel>\n                </IonTabButton>\n                <IonTabButton tab=\"Bluetooth\" href=\"/scan-devices/bluetooth\">\n                  <IonIcon icon={bluetoothOutline} class=\"button-bluetooth\"></IonIcon>\n                  <IonLabel class=\"button-bluetooth button-bluetooth-label\">Bluetooth</IonLabel>\n\n                </IonTabButton>\n              </IonTabBar>\n            </IonTabs>\n          </IonToolbar>\n        </IonFooter>\n\n        {/*<IonAlert\n          isOpen={true}\n          header={'Continue?'}\n          message={'Are you sure you want to continue without selecting a device?'}\n          buttons={['Cancel', 'Continue']}\n        />*/}\n        {/*<IonAlert\n          isOpen={true}\n          header={'Try Again'}\n          message={'Bluetooth is not enabled. Please enable Bluetooth and try again.'}\n          buttons={['Refresh', 'Settings']}\n        />*/}\n        {/*<IonAlert\n          isOpen={true}\n          header={'Error'}\n          message={'There was an error connecting to the Bluetooth device. Make sure you are selecting the right device and try again.'}\n          buttons={['OK']}\n        />*/}\n\n      </IonContent>\n    );\n  };\n};\n\nclass scanForDevices {\n  initializeParams: { request: boolean; statusReceiver: boolean; restoreKey: string; };\n  scanParams: { allowDuplicates: boolean; isConnectable: boolean; };\n  devices: object;\n\n  constructor(public ble: typeof BluetoothLE) {\n    this.ble = ble;\n\n    this.initializeParams = {\"request\": true, \"statusReceiver\": false, \"restoreKey\": \"magic-light-ble\"};\n    this.scanParams = {\"allowDuplicates\": false, \"isConnectable\": true};\n    this.devices = [];\n   }\n\n  scan(timeout) {\n    this.bluetoothScan(timeout);\n  }\n\n  bluetoothScan(timeout) {\n    if (!isPlatform('cordova')) {\n      console.log(\"Platform not cordova, BLE will not work!\");\n      return;\n    }\n\n    this.checkPermissionsAndroid();\n\n    let initializeResult = this.ble.initialize(this.initializeParams);\n    if(initializeResult[\"status\"] == \"disabled\") {\n      //Alert for bluetooth disabled. Ask to scan again / open settings.\n    }\n\n    this.devices = this.ble.startScan(this.scanParams); \n    setTimeout(() => { \n      this.ble.stopScan();\n    }, timeout*1000);\n  \n  }  \n\n  checkPermissionsAndroid() {\n    if(isPlatform('android')) {\n      let per = this.ble.hasPermission();\n      let loc = this.ble.isLocationEnabled();\n\n      if(!per[\"hasPermission\"]) {\n        this.ble.requestPermission();\n      }\n      if(!loc[\"requestLocation\"]) {\n        this.ble.requestLocation();\n      }\n    }\n  }\n}\n\n///Implement checks to see if bluetooth is enabled, bluetooth has permissions (android) and so on.\n//https://github.com/randdusing/cordova-plugin-bluetoothle#permissions-android\n//Bad formatting but good info on androind permissions: https://ionicframework.com/docs/v3/native/bluetoothle/\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}